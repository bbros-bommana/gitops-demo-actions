# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when there is a push to the main branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.
#
#
# 2. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: Push Image to ECR

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-2
  ECR_IMAGE_NAME: gitops-skm-demo
  ECR_IMAGE_TAG: ${{ github.sha }}
  ECR_Registry: 356791834110.dkr.ecr.us-east-2.amazonaws.com

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.ECR_Registry }}/${{ env.ECR_IMAGE_NAME }}:${{ github.sha }}

#    - name: Build, tag, and push image to Amazon ECR
#      id: build-image
#      env:
#        ECR_REGISTRY: ${{ env.ECR_Registry }}
#        ECR_REPOSITORY: gitops-skm-demo
#        IMAGE_TAG: ${{ github.sha }}
#      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
#        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: call the other repo
      env:
        GITHUB_TOKEN: ${{ secrets.skm_github_actions }}
        EVENT: new-image
        ORG: bbros-bommana
        REPO: gitops-demo-config-actions
      run: |
        curl -d "{\"event_type\": \"${EVENT}\"}" -H "Content-Type: application/json" -H "Authorization: token ${GITHUB_TOKEN}" -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/${ORG}/${REPO}/dispatches"
